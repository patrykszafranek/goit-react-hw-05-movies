{"version":3,"file":"static/js/681.f05d4f63.chunk.js","mappings":"+PAIe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,uGACSC,EAAAA,EAAAA,IAAgBJ,GADzB,gBACTF,EADS,EACTA,QACRC,EAAWD,GAFM,2CAAH,qDAKhBK,GACD,GAAE,CAACH,KAGF,yBACGF,EAAU,GACT,wBACGA,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EADE,OAQf,+DAIP,C,uNC/BDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCACHC,EAAY,kCAEZC,EAAY,mCAAG,WAAMC,GAAN,kFACpBC,EADoB,+BACkBJ,EADlB,4DAC6EG,GAD7E,SAEKJ,EAAAA,EAAAA,IAAUK,GAFf,uBAEZC,EAFY,EAElBC,KAFkB,kBAGnBD,GAHmB,2CAAH,sDAMZE,EAAmB,mCAAG,+FAC3BH,EAD2B,qCACiBJ,GADjB,SAEFD,EAAAA,EAAAA,IAAUK,GAFR,uBAEnBC,EAFmB,EAEzBC,KAFyB,kBAG1BD,GAH0B,2CAAH,qDAMnBG,EAAe,mCAAG,WAAMlB,GAAN,kFACvBc,EADuB,gBACAd,EADA,qBACoBU,EADpB,4BAECD,EAAAA,EAAAA,IAAUK,GAFX,uBAEfK,EAFe,EAErBH,KAFqB,kBAGtBG,GAHsB,2CAAH,sDAMfC,EAAY,mCAAG,WAAMpB,GAAN,kFACpBc,EADoB,gBACGd,EADH,4BAC8BU,EAD9B,4BAEHD,EAAAA,EAAAA,IAAUK,GAFP,uBAElBE,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,2CAAH,sDAMZZ,EAAe,mCAAG,WAAMJ,GAAN,kFACvBc,EADuB,gBACAd,EADA,4BAC2BU,EAD3B,4BAEND,EAAAA,EAAAA,IAAUK,GAFJ,uBAErBE,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,2CAAH,qD","sources":["components/Reviews.jsx","components/fetchAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'components/fetchAPI';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      const { reviews } = await getMovieReviews(movieId);\n      setReviews(reviews);\n    };\n\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>{author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>There is no reviews for this movie</p>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3987ef8b50a8e2daa6230641b3d0f9ca';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const searchMovies = async stringToSearch => {\n  const queryString = `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${API_KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${API_KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\n\nexport const getMovieCast = async movieId => {\n  const queryString = `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const queryString = `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","getMovieReviews","map","id","author","content","axios","API_KEY","IMAGE_URL","searchMovies","stringToSearch","queryString","movies","data","fetchTrendingMovies","getMovieDetails","movie","getMovieCast"],"sourceRoot":""}