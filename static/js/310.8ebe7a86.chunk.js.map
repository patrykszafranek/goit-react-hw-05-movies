{"version":3,"file":"static/js/310.8ebe7a86.chunk.js","mappings":"uUAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCACHC,EAAY,kCAEZC,EAAY,mCAAG,WAAMC,GAAN,kFACpBC,EADoB,+BACkBJ,EADlB,4DAC6EG,GAD7E,SAEKJ,EAAAA,EAAAA,IAAUK,GAFf,uBAEZC,EAFY,EAElBC,KAFkB,kBAGnBD,GAHmB,2CAAH,sDAMZE,EAAmB,mCAAG,+FAC3BH,EAD2B,qCACiBJ,GADjB,SAEFD,EAAAA,EAAAA,IAAUK,GAFR,uBAEnBC,EAFmB,EAEzBC,KAFyB,kBAG1BD,GAH0B,2CAAH,qDAMnBG,EAAe,mCAAG,WAAMC,GAAN,kFACvBL,EADuB,gBACAK,EADA,qBACoBT,EADpB,4BAECD,EAAAA,EAAAA,IAAUK,GAFX,uBAEfM,EAFe,EAErBJ,KAFqB,kBAGtBI,GAHsB,2CAAH,sDAMfC,EAAY,mCAAG,WAAMF,GAAN,kFACpBL,EADoB,gBACGK,EADH,4BAC8BT,EAD9B,4BAEHD,EAAAA,EAAAA,IAAUK,GAFP,uBAElBE,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,2CAAH,sDAMZM,EAAe,mCAAG,WAAMH,GAAN,kFACvBL,EADuB,gBACAK,EADA,4BAC2BT,EAD3B,4BAEND,EAAAA,EAAAA,IAAUK,GAFJ,uBAErBE,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,2CAAH,qD,mIC5BfO,EAAOC,EAAAA,GAAAA,KAAH,sJAQJC,EAAQD,EAAAA,GAAAA,MAAH,+FAMLE,EAASF,EAAAA,GAAAA,OAAH,sV,4CCXbG,EAAS,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAAsCD,EAAAA,EAAAA,UAAS,IAA/C,eAAOE,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQJ,EAAaK,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAO,CACT,IAAMG,EAAS,mCAAG,uGACU5B,EAAAA,EAAAA,IAAayB,GADvB,mBACRI,EADQ,EACRA,QACRZ,EAAUY,GACa,IAAnBA,EAAQC,OAHI,yCAIPC,MAAM,2BAJC,2CAAH,qDAOfH,GACD,CACa,KAAVH,GACFM,MAAM,sBAET,GAAE,CAACN,IAOJ,OACE,4BACE,UAACd,EAAD,CAAMqB,SAPW,SAAAC,GACnBA,EAAMC,iBACNZ,EAAgB,CAAEG,MAAOP,GAC1B,EAIG,WACE,SAACL,EAAD,CACEsB,KAAK,OACLC,MAAOlB,EACPmB,SAAU,SAAAJ,GAAK,OAAId,EAAec,EAAMK,OAAOF,MAAhC,EACfG,YAAY,kBAEd,SAACzB,EAAD,CAAQqB,KAAK,SAAb,uBAGDhC,GAAUA,EAAO2B,OAAS,IACzB,wBACG3B,EAAOqC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,WAAD,iBAAgBH,IACxBI,MAAO,CACLC,KAAM,CACJvB,SAAAA,KALR,UAUE,uBAAImB,OAXCD,EADC,QAoBrB,EAED1B,EAAOgC,YAAc,SAErB,O","sources":["components/fetchAPI.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3987ef8b50a8e2daa6230641b3d0f9ca';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const searchMovies = async stringToSearch => {\n  const queryString = `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${API_KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${API_KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\n\nexport const getMovieCast = async movieId => {\n  const queryString = `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const queryString = `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Button = styled.button`\n  background-color: grey;\n  border-radius: 4px;\n  color: white;\n  padding: 8px 15px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin-left: 10px;\n  font-weight: 500;\n  cursor: pointer;\n  &:hover {\n    background-color: orangered;\n    color: black;\n  }\n`;\n","import { Form, Input, Button } from './Movies.styled';\nimport { useState, useEffect } from 'react';\nimport { searchMovies } from 'components/fetchAPI';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [movieToFind, setMovieToFind] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      const getMovies = async () => {\n        const { results } = await searchMovies(query);\n        setMovies(results);\n        if (results.length === 0) {\n          return alert('There is no such movie');\n        }\n      };\n      getMovies();\n    }\n    if (query === '') {\n      alert('Your query is empty');\n    }\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: movieToFind });\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          value={movieToFind}\n          onChange={event => setMovieToFind(event.target.value)}\n          placeholder=\"Search movie\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n\n      {movies && movies.length > 0 && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link\n                to={{\n                  pathname: `/movies/${`${id}`}`,\n                  state: {\n                    from: {\n                      location,\n                    },\n                  },\n                }}\n              >\n                <p>{title}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nMovies.displayName = 'Movies';\n\nexport default Movies;\n"],"names":["axios","API_KEY","IMAGE_URL","searchMovies","stringToSearch","queryString","movies","data","fetchTrendingMovies","getMovieDetails","movieId","movie","getMovieCast","getMovieReviews","Form","styled","Input","Button","Movies","useState","setMovies","movieToFind","setMovieToFind","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","useEffect","getMovies","results","length","alert","onSubmit","event","preventDefault","type","value","onChange","target","placeholder","map","id","title","to","pathname","state","from","displayName"],"sourceRoot":""}